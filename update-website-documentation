#!/usr/bin/env php
<?php

require_once(__DIR__.'/vendor/autoload.php');

use BoostTasks\TempDirectory;
use BoostTasks\BinTrayCache;

function main() {
    $options = CommandLineOptions::process($_SERVER['argv'],
        'Update the website development documentation from BinTray.');
    if (is_numeric($options)) { exit($options); }
    EvilGlobals::init($options);

    foreach(array('master', 'develop') as $branch) {
        try {
            update_documentation($branch);
        }
        catch(RuntimeException $e) {
            Log::error($e);
        }
    }
}

function update_documentation($branch) {
    // Get archive path setting.
    $archives_path = EvilGlobals::settings('website-archives');
    if (!$archives_path) {
        throw new RuntimeException("website-archives not set");
    }
    if (!is_dir($archives_path)) {
        throw new RuntimeException("website-archives not a directory");
    }
    $archives_path = rtrim($archives_path, '/');

    // Check the location we'll install the documentation at.
    // TODO: Store date instead of version?
    $destination_path = "{$archives_path}/{$branch}";
    $version = is_file("{$destination_path}/.bintray-version") ?
        file_get_contents("{$destination_path}/.bintray-version") :
        '';

    // Download file details from bintray...
    $cache = new BinTrayCache;
    foreach($cache->fetchDetails($branch) as $file) {
        if ($version == $file->version) {
            Log::info("{$branch} documentation: Already installed: {$file->name}, version {$file->version}.");
            return;
        }

        Log::info("{$branch} documentation: Attempt to install {$file->name}, version {$file->version}.");

        // Download tarball.
        $file_path = $cache->cachedDownload($file);
        if (!$file_path) {
            Log::info("Download failed.");
            continue;
        }

        Log::debug("{$branch} documentation: Extracting to {$destination_path}.");

        // Extract into a temporary directory.
        $temp_directory = new TempDirectory("{$archives_path}/tmp");
        $extract_path = $cache->extractSingleRootArchive($file_path, $temp_directory->path);

        // Add the version details.
        file_put_contents("{$extract_path}/.bintray-version", $file->version);

        // Replace the old documentation.
        // Would be nice to overwrite old archive in a cleaner manner...
        if (realpath($destination_path)) { rename($destination_path, "{$temp_directory->path}/old"); }
        rename($extract_path, $destination_path);

        $cache->cleanup($branch);
        Log::info("{$branch} documentation: Successfully installed documentation.");
        return;
    }

    throw new RuntimeException("Unable to download any of the files.");
}

main();
