#!/usr/bin/env php
<?php

/* 
 * Copyright 2013 Daniel James <daniel@calamity.org.uk>.
 *
 * Distributed under the Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */

require_once(__DIR__.'/vendor/autoload.php');
EvilGlobals::init();

try {
    $dst = EvilGlobals::data_path().'/upload';

    if (is_dir($dst)) {
        Process::run("rm -r {$dst}");
    }

    mkdir($dst);

    $repo = new RepoBase(__DIR__);
    $repo->command("archive HEAD | tar -x -C {$dst}");
    $repo->command("rev-parse HEAD > {$dst}/commit_hash.txt");

    #Process::run("rm -r {$dst}/nbproject");
    Process::run("rm {$dst}/upload-this-to-server");
    Process::run("rsync --exclude var --exclude vendor -azv --delete-after {$dst}/ dnljms@boost.org:boost-tasks/");

    // Tag the upload.
    $tags = array();
    foreach($repo->read_lines('tag') as $tag) {
        $tags[$tag] = true;
    }
    for($count = 1;true;++$count) {
        $tag = "upload-".date('Ymd')."-{$count}";
        if (!array_key_exists($tag, $tags)) {
            $git->command("tag {$tag}");
            break;
        }
    }
    $git->command("tag -f last-upload");
}
catch (\RuntimeException $e) {
    Log::error("Runtime exception: {$e}");
    exit(1);
}

// Return an error code if an error was logged.
if (Log::$error) {
    exit(1);
}
