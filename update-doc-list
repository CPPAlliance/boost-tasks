#!/usr/bin/env php
<?php
require_once(__DIR__.'/vendor/autoload.php');

use GetOptionKit\OptionCollection;

function main($args) {
    EvilGlobals::init('config.neon');
    $specs = new OptionCollection;
    $specs->add('version:', "Version of update (e.g. develop, 1.57.0)");
    $options = CommandLineOptions::process($args,
        'Update the documentation list',
        $specs);
    EvilGlobals::setup();

    // TODO: For some reason 'hasArgument' is always true, even when
    // there isn't a version. Am I misunderstanding it? Doesn't really
    // matter as it ends up falsey.
    $version = array_key_exists('version', $options) ? $options['version'] : null;

    // Update the mirror
    GitHubEventQueue::downloadEvents();
    $mirror = new LocalMirror();
    $mirror->refresh();
    $mirror->fetchDirty();

    // Update the website repo.
    $website_repo = new WebsiteRepo();
    $result = $website_repo->updateDocumentationList($mirror, $version);
    if (!$result) {
        // Want a hard failure here, so that we're not updating the
        // super projects from data that isn't checked in.
        throw new RuntimeException("Failed to update documentation list on website.");
    }

    // Update maintainer lists.
    foreach (EvilGlobals::$branch_repos as $x) {
        $website_repo->updateSuperProject(new SuperProject($x));
    }

    // Library list.
    if (array_key_exists('library-file', EvilGlobals::$settings)) {
        $library_list_path = EvilGlobals::$settings['library-file'];
        file_put_contents($library_list_path, file_get_contents(
            'http://www.boost.org/doc/generate.php?page=libs/libraries.htm&version=master'
        ));
    }
}

main($_SERVER['argv']);
