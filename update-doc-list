#!/usr/bin/php
<?php
require_once(__DIR__.'/vendor/autoload.php');

use GetOptionKit\OptionCollection;
use GetOptionKit\OptionParser;
use GetOptionKit\OptionPrinter\ConsoleOptionPrinter;
use GetOptionKit\Exception\InvalidOptionException;

function main($args) {
    $specs = new OptionCollection;
    $specs->add('help', "Diplay command line usage.")
        ->defaultValue(false);
    $specs->add('version:', "Version of update (e.g. develop, 1.57.0)");

    try {
        $parser = new OptionParser($specs);
        $options = $parser->parse($args)->toArray();
    } catch (InvalidOptionException $e) {
        usage($specs, $e);
        exit(1);
    }

    if ($options['help']) {
        usage($specs);
        exit(0);
    }

    // TODO: For some reason 'hasArgument' is always true, even when
    // there isn't a version. Am I misunderstanding it? Doesn't really
    // matter as it ends up falsey.
    $version = array_key_exists('version', $options) ? $options['version'] : null;

    // Update the mirror
    GitHubEventQueue::downloadEvents();
    $mirror = new LocalMirror();
    $mirror->refresh();
    $mirror->fetchDirty();

    // Update the website repo.
    $website_repo = new WebsiteRepo();
    $result = $website_repo->updateDocumentationList($mirror, $version);
    if (!$result) {
        // Want a hard failure here, so that we're not updating the
        // super projects from data that isn't checked in.
        throw new RuntimeException("Failed to update documentation list on website.");
    }

    // Update maintainer lists.
    foreach (EvilGlobals::$branch_repos as $x) {
        $website_repo->updateSuperProject(new SuperProject($x));
    }
}

function usage($specs, $message = null) {
    if ($message) { echo "{$message}\n\n"; }
    echo "Usage:\n";
    $printer = new ConsoleOptionPrinter();
    echo $printer->render($specs);
}

main($_SERVER['argv']);
